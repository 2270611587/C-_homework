3.1
[解]类声明的一般格式如下:

class类名{

[ private:]

私有数据成员和成员函数

public:

公有数据成员和成员函数

};

其中: class 是声明类的关键字,类名是要声明的类的名字;后面的花括号表示类声明的范围;最后的分号表示类声明结束。

除了private和public之外,类中的成员还可以用另一个关键字protected 来说明。这时类声明的格式可写成:

class   类名{

[private:]

私有数据成员和成员函数

public:

公有数据成员和成员函数

protected:

保护数据成员和成员函数
}

被protected说明的数据成员和成员函数称为保护成员。保护成员可以由本类的成员函数访问，也可以由本类的派生类的成员丽数访问，而类外的任何访问都是非法的，即它是半隐蔽的。
3.2
[解]构造函数是一 种特殊的成员函数,它主要用于为对象分配空间,进行初始化。构造函数的名字必须与类名相同，而不能由用户任意命名。它可以有任意类型的参数,但不.能具有返回值类型。它不需要用户来调用,而是在建立对象时自动执行。

构造函数具有一些特性:

(1)构造函数的名字必须与类名相同，否则编译程序将把它当作-般的成员丽数来处理

(2)构造函数没有返回值,在定义构造丽数时，是不能说明它的类型的,甚至说明为void类型也不行。

(3)构造函数的丽数体可写在类体内，也可写在类体外。

(4)构造函数的作用主要是用来对对象进行初始化,用户根据初始化的要求设计函数体和函数参数。在构造丽数的丽数体中不仅可以对数据成员赋初值,而且可以包含其他语句,但是,为了保持构造丽数的功能清晰，一-般不提倡在构造丽数中加入与初始化无关的内容
3.3
[解]所谓对象数组是指每一数组元素都是对象的数组,也就是说,若一个类有若千个对象,我们把这一系列的对象用一个数组来存放。对象数组的元素是对象,不仅具有数据成员,而且还有函数成员。
3.4
[解] C++ 为成员函数提供了一个名字为this的指针,这个指针称为自引用指针。每当创建一一个对象时，系统就把this指针初始化为指向该对象，即this指针的值是当前被调用的成员丽数所在的对象的起始地址。

每当调用一个成员函数时,系统就自动把this指针作为一个隐含的参数传给该雨数。不同的对象调用同一个成员丽数时,C++编译器将根据成员函数的this指针所指向的对象来确定应该引用哪一个对象的数据成员。
3.7
B
3.8
C
3.9
C
4.0
B
3.14
B
3.19
Constructing
10
Destructing
100
Destructing
3.22
Default constructor called.
Default constructor called.
Default constructor called.
Constructor: a=1,b=2
Constructor: a=3,b=4
Constructor: a=5,b=6
